name: Docker Build and Push on new release

on:
    push:
        tags:
            - '*'

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: esportsvideos/api
    PHP_IMAGE_NAME: php
    NGINX_IMAGE_NAME: nginx

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v3

            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3

            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Log in to the Container registry
                uses: docker/login-action@v3
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Pull the latest version of the php & nginx docker image
                run: |
                    docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.PHP_IMAGE_NAME }}:latest
                    docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.NGINX_IMAGE_NAME }}:latest

            -   name: Tag the latest version as rollback
                run: |
                    docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.PHP_IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.PHP_IMAGE_NAME }}:rollback
                    docker tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.NGINX_IMAGE_NAME }}:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.NGINX_IMAGE_NAME }}:rollback

            -   name: Docker meta for php image
                id: meta_php
                uses: docker/metadata-action@v5
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.PHP_IMAGE_NAME }}
                    labels: |
                        org.opencontainers.image.vendor=Esports-Videos
                        org.opencontainers.image.licenses=MIT
                        org.opencontainers.image.description=Production PHP image used for API

            -   name: Docker meta for nginx image
                id: meta_nginx
                uses: docker/metadata-action@v5
                with:
                    images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.NGINX_IMAGE_NAME }}
                    labels: |
                        org.opencontainers.image.vendor=Esports-Videos
                        org.opencontainers.image.licenses=MIT
                        org.opencontainers.image.description=Production nginx image used for API

            -   name: Build and push php image
                uses: docker/build-push-action@v6
                with:
                    provenance: false
                    context: .
                    file: docker/Dockerfile
                    target: php
                    platforms: linux/amd64
                    labels: ${{ steps.meta_php.outputs.labels }}
                    cache-from: type=gha, scope=${{ github.workflow }}
                    cache-to: type=gha, scope=${{ github.workflow }}
                    push: true
                    tags: "${{ steps.meta_php.outputs.tags }}"

            -   name: Build and push php image
                uses: docker/build-push-action@v6
                with:
                    provenance: false
                    context: .
                    file: docker/Dockerfile
                    target: nginx
                    platforms: linux/amd64
                    labels: ${{ steps.meta_nginx.outputs.labels }}
                    cache-from: type=gha, scope=${{ github.workflow }}
                    cache-to: type=gha, scope=${{ github.workflow }}
                    push: true
                    tags: "${{ steps.meta_nginx.outputs.tags }}"

            -   name: Push the rollback version
                run: |
                    docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.PHP_IMAGE_NAME }}:rollback
                    docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/${{ env.NGINX_IMAGE_NAME }}:rollback
